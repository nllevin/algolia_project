{"version":3,"sources":["Geo.js","App.js","index.js","keys.js"],"names":["Geo","InfoWindow","_this","props","google","maps","onClickMarker","_ref","hit","marker","getMap","close","setContent","concat","firstname","lastname","open","_this2","this","react_default","a","createElement","GeoSearch","initialZoom","maxZoom","mapTypeControl","initialPosition","lat","lng","enableRefine","_ref2","hits","map","Marker","key","objectID","onClick","_ref3","Component","GOOGLE_MAPS_API_KEY","require","searchClient","algoliasearch","Hit","company","className","address","city","state","zip","phone","email","App","href","InstantSearch","indexName","Configure","hitsPerPage","aroundLatLngViaIP","SearchBox","translations","placeholder","Hits","hitComponent","style","height","GoogleMapsLoader","apiKey","src_Geo","RefinementList","attribute","showMore","Pagination","ReactDOM","render","src_App_0","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.02da64df.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { GeoSearch, Marker } from \"react-instantsearch-dom-maps\";\n\nclass Geo extends Component {\n  InfoWindow = new this.props.google.maps.InfoWindow()\n\n  onClickMarker = ({ hit, marker }) => {\n    if (this.InfoWindow.getMap()) this.InfoWindow.close();\n    this.InfoWindow.setContent(`${hit.firstname} ${hit.lastname}`);\n    this.InfoWindow.open(marker.getMap(), marker);\n  }\n\n  render() {\n    const { google } = this.props;\n\n    return (\n      <GeoSearch\n        google={google}\n        initialZoom={8}\n        maxZoom={18}\n        mapTypeControl={false}\n        initialPosition={{\n          lat: 40.7128,\n          lng: -74.0060\n        }}\n        enableRefine={false}\n      >\n        {({ hits }) => (\n          <div>\n            {hits.map(hit => (\n              <Marker \n                key={hit.objectID} \n                hit={hit} \n                onClick={({ marker }) => {\n                  this.onClickMarker({\n                    hit,\n                    marker\n                  })\n                }}\n              />\n            ))}\n          </div>\n        )}\n      </GeoSearch>\n    );\n  }\n}\n\nexport default Geo;\n","import React, { Component } from 'react';\nimport algoliasearch from 'algoliasearch/lite';\nimport {\n  InstantSearch,\n  Hits,\n  SearchBox,\n  Pagination,\n  Configure,\n  RefinementList\n} from 'react-instantsearch-dom';\nimport { GoogleMapsLoader } from 'react-instantsearch-dom-maps';\nimport Geo from \"./Geo.js\";\nimport PropTypes from 'prop-types';\nimport './App.css';\nconst { GOOGLE_MAPS_API_KEY } = require(\"./keys.js\");\n\nconst searchClient = algoliasearch('5UDDVDO0RB', '5db4d1012a4e490b710a918547c4dfc0');\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <header className=\"header\">\n          <h1 className=\"header-title\">\n            <a href=\"/\">FriendFinder</a>\n          </h1>\n          <p className=\"header-subtitle\">\n            using{' '}\n            <a href=\"https://github.com/algolia/react-instantsearch\">\n              React InstantSearch\n            </a>\n          </p>\n        </header>\n\n        <div className=\"container\">\n          <InstantSearch searchClient={searchClient} indexName=\"geoloc_contacts\">\n            <Configure\n              hitsPerPage={6}\n              aroundLatLngViaIP\n            />\n            <div className=\"search-panel\">\n              <div className=\"search-panel__results\">\n                <SearchBox\n                  className=\"searchbox\"\n                  translations={{\n                    placeholder: 'Find your friends! Search by name, company or location.',\n                  }}\n                />\n\n                <div className=\"search-results\">\n                  <Hits hitComponent={Hit} />\n                  <div className=\"refinements-and-map\">\n                    <div className=\"map\" style={{ height: 500 }}>\n                      <GoogleMapsLoader apiKey={GOOGLE_MAPS_API_KEY}>\n                        {google => <Geo google={google} />}\n                      </GoogleMapsLoader>\n                    </div>\n                    <div className=\"refinements\">\n                      <RefinementList attribute=\"city\" showMore={true} className=\"refinement\" />\n                      <RefinementList attribute=\"state\" showMore={true} className=\"refinement\" />\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"pagination\">\n                  <Pagination />\n                </div>\n              </div>\n            </div>\n          </InstantSearch>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction Hit(props) {\n  const { hit } = props;\n  return (\n    <article>\n      <h1>{hit.firstname} {hit.lastname}</h1>\n      <p>{hit.company}</p>\n      <p className=\"address\">{hit.address}</p>\n      <p className=\"address-2\">{hit.city}, {hit.state} {hit.zip}</p>\n      <p>{hit.phone}</p>\n      <p>{hit.email}</p>\n    </article>\n  );\n}\n\nHit.propTypes = {\n  hit: PropTypes.object.isRequired,\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = {\n  GOOGLE_MAPS_API_KEY: \"AIzaSyCqYyn09MIAAlC0N-ahrTaAaMnTqzUbYIw\"\n};"],"sourceRoot":""}